{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/scovtree/master/nextflow_schema.json",
    "title": "nf-core/scovtree pipeline parameters",
    "description": "Phylogenetic Analysis for SARS-COV2",
    "type": "object",
    "definitions": {
        "phylogenetic_analysis_options": {
            "title": "Phylogenetic analysis without filtering sequences against GISAID",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "properties": {
                "input": {
                    "type": "string",
                    "fa_icon": "fas fa-dna",
                    "description": "Fasta file of consensus sequences.",
                    "help_text": "The directory path to consensus sequences /path/to/consensus_sequences/*.fasta"
                },
                "outdir": {
                    "type": "string",
                    "description": "The output directory where the results will be saved.",
                    "default": "./results",
                    "fa_icon": "fas fa-folder-open"
                },
                "reference_name": {
                    "type": "string",
                    "description": "Name of reference sequence.",
                    "default": "MN908947.3",
                    "fa_icon": "fas fa-align-center",
                    "help_text": "Name of reference SARS-COV2 MN908947.3"
                },
                "reference_fasta": {
                    "type": "string",
                    "description": "Input Fasta file of reference sequences.",
                    "default": "https://raw.githubusercontent.com/nhhaidee/nf-test-datasets/main/nCoV-2019.reference.fasta",
                    "fa_icon": "fas fa-folder-open"
                },
                "substitution_model": {
                    "type": "string",
                    "description": "Substitution model for building phylogenetic tree",
                    "help_text": "Substitution model for building phylogenetic tree in IQTree",
                    "default": "GTR",
                    "fa_icon": "fas fa-folder-open"
                }
            }
        },
        "filter_gisaid_options": {
            "title": "Phylogenetic Analysis with filtering sequences against GISAID",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "properties": {
                "gisaid_sequences": {
                    "type": "string",
                    "description": "Directory path to gisaid sequences.",
                    "fa_icon": "fas fa-align-center",
                    "help_text": "Directory path to gisaid sequences /path/to/consensus_sequences/sequences_fasta_2021_06_14.tar.xz"
                },
                "gisaid_metadata": {
                    "type": "string",
                    "description": "Directory path to gisaid metadata.",
                    "fa_icon": "fas fa-folder-open",
                    "help_text": "Directory path to gisaid metadata /path/to/consensus_sequences/metadata_tsv_2021_06_14.tar.xz"
                },
                "country": {
                    "type": "string",
                    "default": "''",
                    "description": "Filter sequences in GISAID from Country.",
                    "fa_icon": "fas fa-folder-open",
                    "help_text": "Select sequences in GISAID from Country."
                },
                "region": {
                    "type": "string",
                    "default": "''",
                    "description": "Filter sequences in GISAID from Region.",
                    "fa_icon": "fas fa-folder-open",
                    "help_text": "Filter sequences in GISAID from Region."
                },
                "lmin": {
                    "type": "integer",
                    "default": 28000,
                    "description": "Remove sequences that length < lmin.",
                    "fa_icon": "fas fa-folder-open",
                    "help_text": "Remove sequences that length < lmin."
                },
                "lmax": {
                    "type": "integer",
                    "default": 31000,
                    "description": "Remove sequences that length > lmax.",
                    "fa_icon": "fas fa-folder-open",
                    "help_text": "Remove sequences that length > lmax."
                },
                "xambig": {
                    "type": "integer",
                    "default": 3000,
                    "description": "Remove sequences that have number of ambiguous sides  > xambig.",
                    "fa_icon": "fas fa-folder-open",
                    "help_text": "Remove sequences that have number of ambiguous sides  > xambig."
                },
                "focus_country": {
                    "type": "string",
                    "default": "Canada",
                    "description": "Filter sequences that belong to country",
                    "fa_icon": "fas fa-folder-open",
                    "help": "Filter sequences that belong to country"
                },
                "msa_threshold_filter": {
                    "type": "integer",
                    "default": 10000,
                    "description": "The threshold filter sequences in MSA result to manageable number",
                    "fa_icon": "fas fa-folder-open",
                    "help_text": "The threshold filter sequences in MSA result to manageable number"
                }
            }
        },
        "shiptv_visualization_options": {
            "title": "Shiptv visualization Options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where metadata columns will be kept for visualization",
            "properties": {
                "max_taxa": {
                    "type": "integer",
                    "fa_icon": "fas fa-dna",
                    "default": 75,
                    "description": "Maximum taxa presented in the phylogenetic tree in Shiptv visualization",
                    "help_text": "Maximum taxa presented in the phylogenetic tree in Shiptv visualization"
                },
                "visualize_gisaid_metadata": {
                    "type": "string",
                    "fa_icon": "fas fa-dna",
                    "default": "''",
                    "description": "Specify columns of GISAID metadata for shiptv visualization",
                    "help_text": "Specify columns of GISAID metadata for shiptv visualization, by default all columns are visualized. An Example: --visualize_gisaid_metadata 'Virus_name,Type,Additional_location_information,Clade,Variant,AA_Substitutions,Submission_date,Is_reference?,Is_complete?'"
                },
                "visualize_aa_change": {
                    "type": "boolean",
                    "fa_icon": "fas fa-dna",
                    "default": true,
                    "description": "Specify wheter aa subsitution change is visualizaed with Shiptv or not",
                    "help_text": "Specify wheter aa subsitution change is visualizaed with Shiptv or not (default: True)"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "hidden": true,
                    "fa_icon": "fas fa-question-circle"
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "hidden": true,
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": [
                        "symlink",
                        "rellink",
                        "link",
                        "copy",
                        "copyNoFollow",
                        "move"
                    ]
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "hidden": true,
                    "help_text": "This works exactly as with `--email`, except emails are only sent if the workflow is not successful."
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true,
                    "help_text": "Set to receive plain-text e-mails instead of HTML formatted."
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true,
                    "help_text": "If file generated by pipeline exceeds the threshold, it will not be attached."
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true,
                    "help_text": "Set to disable colourful command line output and live life in monochrome."
                },
                "multiqc_config": {
                    "type": "string",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "tracedir": {
                    "type": "string",
                    "description": "Directory to keep pipeline Nextflow logs and reports.",
                    "default": "${params.outdir}/pipeline_info",
                    "fa_icon": "fas fa-cogs",
                    "hidden": true
                },
                "enable_conda": {
                    "type": "boolean",
                    "hidden": true,
                    "description": "Run this workflow with Conda. You can also use '-profile conda' instead of providing this parameter.",
                    "fa_icon": "fas fa-bacon"
                },
                "singularity_pull_docker_container": {
                    "type": "boolean",
                    "hidden": true,
                    "description": "Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead.",
                    "fa_icon": "fas fa-toolbox",
                    "help_text": "This may be useful for example if you are unable to directly pull Singularity containers to run the pipeline due to http/https proxy issues."
                },
                "show_hidden_params": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested    for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^[\\d\\.]+\\s*.(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^[\\d\\.]+\\.*(s|m|h|d)$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog",
                    "help_text": "Provide git commit id for custom Institutional configs hosted at `nf-core/configs`. This was implemented for reproducibility purposes. Default: `master`.\n\n```bash\n## Download and use config file with following git commit id\n--custom_config_version d52db660777c4bf36546ddb188ec530c3ada1b96\n```"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell nextflow where to find them with the `custom_config_base` option. For example:\n\n```bash\n## Download and unzip the config files\ncd /path/to/my/configs\nwget https://github.com/nf-core/configs/archive/master.zip\nunzip master.zip\n\n## Run the pipeline\ncd /path/to/my/data\nnextflow run /path/to/pipeline/ --custom_config_base /path/to/my/configs/configs-master/\n```\n\n> Note that the nf-core/tools helper package has a `download` command to download all required pipeline files + singularity containers + institutional configs in one go for you, to make this process easier.",
                    "fa_icon": "fas fa-users-cog"
                },
                "hostnames": {
                    "type": "string",
                    "description": "Institutional configs hostname.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/phylogenetic_analysis_options"
        },
        {
            "$ref": "#/definitions/filter_gisaid_options"
        },
        {
            "$ref": "#/definitions/shiptv_visualization_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        }
    ]
}
